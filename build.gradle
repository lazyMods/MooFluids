buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-${mod_version}"
group = 'lazy' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'moofluids'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: mc_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                moofluids {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                moofluids {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'moofluids', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                moofluids {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    //maven { url "https://www.cursemaven.com" }
    maven { url "https://maven.tehnut.info" }
    maven {
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    //TestOnly
    runtimeOnly fg.deobf("curse.maven:ato-405593:3169334")
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}")
    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${top_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")

    compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${top_version}:api")
    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}:api")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "moofluids",
                "Specification-Vendor"    : "moofluidssareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "moofluidssareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}